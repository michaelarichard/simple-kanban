services:
  # Development container for interactive work
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: simple-kanban-dev
    container_name: simple-kanban-dev
    working_dir: /workspace
    volumes:
      - .:/workspace
    tty: true
    environment:
      - PYTHONUNBUFFERED=1

  # Main application service
  simple-kanban:
    container_name: simple_kanban_1
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app-private
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production
      - SESSION_SECRET_KEY=dev-session-secret-key-change-in-production
      - DATABASE_URL=postgresql+asyncpg://kanban:kanban@postgres:5432/simple_kanban
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=simple_kanban
      - POSTGRES_USER=kanban
      - POSTGRES_PASSWORD=kanban
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - CORS_ORIGINS=["http://localhost:3000","http://localhost:8000","http://localhost:8080"]
      - LOG_LEVEL=DEBUG
      - RELOAD=true
    depends_on:
      - postgres
      - redis

  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: simple_kanban_postgres_1
    restart: unless-stopped
    environment:
      - POSTGRES_DB=simple_kanban
      - POSTGRES_USER=kanban
      - POSTGRES_PASSWORD=kanban
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-private
    ports:
      - "5432:5432"

  # Redis cache and session store
  redis:
    image: redis:7-alpine
    container_name: simple_kanban_redis_1
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-private
    ports:
      - "6379:6379"

  # Nginx reverse proxy (for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: simple_kanban_nginx_1
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - app-private
    depends_on:
      - simple-kanban

networks:
  app-private:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
